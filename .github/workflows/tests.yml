name: Tests

on: [push, pull_request]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            python: 3.6
          - os: ubuntu-latest
            python: 3.7
          - os: ubuntu-latest
            python: 3.8
          - os: macos-latest
            python: 3.7
          - os: windows-latest
            python: 3.7

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Python version
      run: |
        python --version
    - name: Install
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e ".[dev]"
    - name: Install JavaScript
      run: |
        npm install
        npm run build
    - name: Print environment
      run: |
        python -m pip freeze
        python --version
        python -c "import unicodeit; print(unicodeit.__version__)"
    - name: Lint
      run: pylint unicodeit --disable=fixme
    - name: Lint tests
      if: matrix.os != 'windows-latest'  # because of path separator
      run: pylint tests/*.py --disable=fixme
    - name: pycodestyle
      run: python -m pycodestyle unicodeit
    - name: pycodestyle tests
      if: matrix.os != 'windows-latest'  # because of path separator
      run: python -m pycodestyle tests/*.py
    - name: Test
      run: pytest -vv
      env:
        PYTHONIOENCODING: utf8
    - name: Test TS data is up-to-date
      if: matrix.os != 'windows-latest'  # because of file encoding
      run: |
        python -m unicodeit.export_data ts_data_from_py.ts
        cmp -s ts_src/data.ts ts_data_from_py.ts
    - name: Lint js
      run: npm run lint
    - name: Test js
      run: npm run test
    - name: Build js
      run: npm run build
